@model TrainBlog.Models.BlogPost

<section class="section">
	<div class="container">

		<div class="row justify-content-center">
			<!-- Content-->
			<div class="col-8">

				<!-- Post-->
				<article class="post">
					<h5 class="text-center mt-0 mb-5 pb-3 text-uppercase"><b>Create New Post</b></h5>

					@using (Html.BeginForm("Create", "BlogPosts", FormMethod.Post, new { enctype = "Multipart/form-data" }))
					{
						@Html.AntiForgeryToken()

						@Html.ValidationSummary("", new { @class = "text-danger" })
						<div class="row">
							<div class="col-sm-12">
								<div class="form-group">
									@Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = "Title" })
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-sm-12">
								<div class="form-group">
									@Html.TextBoxFor(m => m.Abstract, new { @class = "form-control", placeholder = "Abstract" })
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-sm-12">
								<div class="form-group">
									@Html.TextAreaFor(m => m.Body, new { @class = "form-control", placeholder = "Body", rows = 10 })
								</div>
							</div>
						</div>
						<div class="row">
							<div class="col-sm-6">
								<div class="form-group">
									<input name="image" type="file" id="fileUpload" class="fileUpload" />
									<label for="fileUpload" class="btn btn-dark">Add Image</label>
								</div>
							</div>
							<div class="col-sm-6">
								<div class="form-group text-right">
									<input type="submit" class="btn btn-dark" value="Publish" />
								</div>
							</div>
						</div>
					}
				</article>
				<!-- Post end-->

			</div>
			<!-- Content end-->

		</div>

	</div> <!-- end container -->
</section>

@*@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>BlogPost</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MediaUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MediaUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MediaUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Published)
                    @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@